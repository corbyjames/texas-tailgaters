# Docker Compose with HTTPS using Caddy reverse proxy
version: '3.8'

services:
  caddy:
    image: caddy:2-alpine
    container_name: marine-caddy
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - marine-network

  backend:
    build: ./backend
    container_name: marine-backend
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - REDIS_URL=redis://redis:6379
      - ADOBE_REDIRECT_URI=https://localhost/api/v1/lightroom/auth/callback
    volumes:
      - ./backend:/app
    depends_on:
      - neo4j
      - minio
      - redis
    networks:
      - marine-network

  frontend:
    build: ./frontend
    container_name: marine-frontend
    environment:
      - REACT_APP_API_URL=https://localhost/api/v1
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - marine-network

  neo4j:
    image: neo4j:5.13
    container_name: marine-neo4j
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - marine-network

  minio:
    image: minio/minio:latest
    container_name: marine-minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - marine-network

  redis:
    image: redis:7-alpine
    container_name: marine-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - marine-network

networks:
  marine-network:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs:
  minio_data:
  redis_data:
  caddy_data:
  caddy_config: